// <auto-generated />
using System;
using Ghotok.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Ghotok.Data.Migrations
{
    [DbContext(typeof(GhotokDbContext))]
    partial class GhotokDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ghotok.Data.DataModels.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLoggedin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVarified")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageChoice")
                        .HasColumnType("int");

                    b.Property<int>("LoggedInDevices")
                        .HasColumnType("int");

                    b.Property<bool>("LookingForBride")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RegisterByMobileNumber")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.BasicInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height_cm")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaternalHomeDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBasicInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaternalHomeDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileCreatingFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligionCast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BasicInfo");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.CurrentProfession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryRange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentProfession");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EducationInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassingYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationInfoId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.EducationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentJobId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrentJobId");

                    b.ToTable("EducationInfo");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.FamilyInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FamilyInfo");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.FamilyMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FamilyInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FamilyMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyMemberOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyInfoId");

                    b.ToTable("FamilyMember");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EducationInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FamilyInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPictureUploaded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageChoice")
                        .HasColumnType("int");

                    b.Property<bool>("LookingForBride")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RegisterByMobileNumber")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BasicInfoId");

                    b.HasIndex("EducationInfoId");

                    b.HasIndex("FamilyInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.AppUser", b =>
                {
                    b.HasOne("Ghotok.Data.DataModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.Education", b =>
                {
                    b.HasOne("Ghotok.Data.DataModels.EducationInfo", null)
                        .WithMany("Educations")
                        .HasForeignKey("EducationInfoId");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.EducationInfo", b =>
                {
                    b.HasOne("Ghotok.Data.DataModels.CurrentProfession", "CurrentJob")
                        .WithMany()
                        .HasForeignKey("CurrentJobId");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.FamilyMember", b =>
                {
                    b.HasOne("Ghotok.Data.DataModels.FamilyInfo", null)
                        .WithMany("FamilyMembers")
                        .HasForeignKey("FamilyInfoId");
                });

            modelBuilder.Entity("Ghotok.Data.DataModels.User", b =>
                {
                    b.HasOne("Ghotok.Data.DataModels.BasicInfo", "BasicInfo")
                        .WithMany()
                        .HasForeignKey("BasicInfoId");

                    b.HasOne("Ghotok.Data.DataModels.EducationInfo", "EducationInfo")
                        .WithMany()
                        .HasForeignKey("EducationInfoId");

                    b.HasOne("Ghotok.Data.DataModels.FamilyInfo", "FamilyInfo")
                        .WithMany()
                        .HasForeignKey("FamilyInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
